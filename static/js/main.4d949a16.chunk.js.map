{"version":3,"sources":["components/board/Board.jsx","components/navbar/Navbar.jsx","components/container/Container.jsx","App.js","reportWebVitals.js","index.js"],"names":["Board","props","this","drawOnCanvas","document","body","addEventListener","e","target","canvas","preventDefault","querySelector","ctx","getContext","sketch","sketch_style","getComputedStyle","width","parseInt","getPropertyValue","height","mousePos","x","y","lastMousePos","clientX","offsetLeft","clientY","offsetTop","touch","touches","mouseEvent","MouseEvent","dispatchEvent","onPaint","canvasDom","touchEvent","rect","getBoundingClientRect","left","top","getTouchPos","removeEventListener","lineWidth","lineJoin","lineCap","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","className","id","React","Component","MainNav","Navbar","bg","fixed","Brand","href","Collapse","IconButton","aria-label","color","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mTAgKeA,G,wDA3Jd,WAAYC,GAAQ,uCACbA,G,gEAINC,KAAKC,iB,qCA+GJC,SAASC,KAAKC,iBACb,cACA,SAAUC,GACLA,EAAEC,QAAUC,GACfF,EAAEG,oBAGJ,GAEDN,SAASC,KAAKC,iBACb,YACA,SAAUC,GACLA,EAAEC,QAAUC,GACfF,EAAEG,oBAGJ,GAEDN,SAASC,KAAKC,iBACb,aACA,SAAUC,GACLA,EAAEC,QAAUC,GACfF,EAAEG,oBAGJ,GAlIF,IAAID,EAASL,SAASO,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MAExBC,EAASV,SAASO,cAAc,WAChCI,EAAeC,iBAAiBF,GACpCL,EAAOQ,MAAQC,SAASH,EAAaI,iBAAiB,UACtDV,EAAOW,OAASF,SAASH,EAAaI,iBAAiB,WAEvD,IAAIE,EAAW,CAAEC,EAAG,EAAGC,EAAG,GACtBC,EAAe,CAAEF,EAAG,EAAGC,EAAG,GAG9Bd,EAAOH,iBACN,aACA,SAAUC,GACTiB,EAAaF,EAAID,EAASC,EAC1BE,EAAaD,EAAIF,EAASE,EAE1BF,EAASC,EAAIf,EAAEkB,QAAUvB,KAAKwB,WAC9BL,EAASE,EAAIhB,EAAEoB,QAAUzB,KAAK0B,aAE/B,GAIDnB,EAAOH,iBACN,aACA,SAAUC,GACT,IAAIsB,EAAQtB,EAAEuB,QAAQ,GAClBC,EAAa,IAAIC,WAAW,YAAa,CAC5CP,QAASI,EAAMJ,QACfE,QAASE,EAAMF,UAEhBlB,EAAOwB,cAAcF,MAEtB,GAIDtB,EAAOH,iBACN,aACA,SAAUC,GACTE,EAAOH,iBAAiB,YAAa4B,GAAS,MAE/C,GAGDzB,EAAOH,iBACN,cACA,SAAUC,GACTc,EA+BF,SAAqBc,EAAWC,GAC/B,IAAIC,EAAOF,EAAUG,wBACrB,MAAO,CACNhB,EAAGc,EAAWN,QAAQ,GAAGL,QAAUY,EAAKE,KACxChB,EAAGa,EAAWN,QAAQ,GAAGH,QAAUU,EAAKG,KAnC7BC,CAAYhC,EAAQF,GAC/B,IAAIsB,EAAQtB,EAAEuB,QAAQ,GAClBC,EAAa,IAAIC,WAAW,YAAa,CAC5CP,QAASI,EAAMJ,QACfE,QAASE,EAAMF,UAEhBlB,EAAOwB,cAAcF,MAEtB,GAIDtB,EAAOH,iBACN,WACA,WACCG,EAAOiC,oBAAoB,YAAaR,GAAS,MAElD,GAIDzB,EAAOH,iBACN,YACA,SAAUC,GACT,IAAIwB,EAAa,IAAIC,WAAW,UAAW,IAC3CvB,EAAOwB,cAAcF,MAEtB,GAaDnB,EAAI+B,UAAY,EAChB/B,EAAIgC,SAAW,QACfhC,EAAIiC,QAAU,QACdjC,EAAIkC,YAAc,QAElB,IAAIZ,EAAU,WACbtB,EAAImC,YACJnC,EAAIoC,OAAOxB,EAAaF,EAAGE,EAAaD,GACxCX,EAAIqC,OAAO5B,EAASC,EAAGD,EAASE,GAChCX,EAAIsC,YACJtC,EAAIuC,Y,+BAoCL,OACC,sBAAKC,UAAU,SAASC,GAAG,SAA3B,UACC,wBAAQD,UAAU,QAAQC,GAAG,UAD9B,W,GArJiBC,IAAMC,Y,+IC+CXC,E,uKApCb,OACC,eAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,MAAM,MAAzB,UAIC,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,SACC,qDAED,eAACJ,EAAA,EAAOK,SAAR,CAAiBV,UAAU,yBAA3B,UACC,cAACW,EAAA,EAAD,CAAYC,aAAW,SAASC,MAAM,UAAtC,SACC,cAAC,IAAD,MAED,cAACF,EAAA,EAAD,CAAYC,aAAW,QAAQC,MAAM,UAArC,SACC,cAAC,IAAD,MAED,cAACF,EAAA,EAAD,CAAYC,aAAW,UAAUC,MAAM,UAAvC,SACC,cAAC,IAAD,MAED,cAACF,EAAA,EAAD,CAAYC,aAAW,WAAWC,MAAM,UAAxC,SACC,cAAC,IAAD,MAED,cAACF,EAAA,EAAD,CAAYC,aAAW,OAAOC,MAAM,UAApC,SACC,cAAC,IAAD,MAED,cAACF,EAAA,EAAD,CAAYC,aAAW,aAAaC,MAAM,UAA1C,SACC,cAAC,IAAD,MAED,cAACF,EAAA,EAAD,CAAYC,aAAW,SAASC,MAAM,UAAtC,SACC,cAAC,IAAD,gB,GA9BgBV,aCUPW,G,wDAhBd,WAAYjE,GAAQ,uCACbA,G,qDAIN,OACC,sBAAKmD,UAAU,YAAf,UACC,cAAC,EAAD,IACA,qBAAKA,UAAU,kBAAf,SACC,cAAC,EAAD,a,GAVmBE,IAAMC,YCCfY,MAJf,WACC,OAAO,cAAC,EAAD,KCQOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3E,SAAS4E,eAAe,SAM1BZ,M","file":"static/js/main.4d949a16.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './style.css';\r\n\r\nclass Board extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.drawOnCanvas();\r\n\t}\r\n\r\n\tdrawOnCanvas() {\r\n\t\tpreventScrolling();\r\n\r\n\t\tvar canvas = document.querySelector('#board');\r\n\t\tvar ctx = canvas.getContext('2d');\r\n\r\n\t\tvar sketch = document.querySelector('#sketch');\r\n\t\tvar sketch_style = getComputedStyle(sketch);\r\n\t\tcanvas.width = parseInt(sketch_style.getPropertyValue('width'));\r\n\t\tcanvas.height = parseInt(sketch_style.getPropertyValue('height'));\r\n\r\n\t\tvar mousePos = { x: 0, y: 0 };\r\n\t\tvar lastMousePos = { x: 0, y: 0 };\r\n\r\n\t\t/* Mouse Capturing Work */\r\n\t\tcanvas.addEventListener(\r\n\t\t\t'mousemove',\r\n\t\t\tfunction (e) {\r\n\t\t\t\tlastMousePos.x = mousePos.x;\r\n\t\t\t\tlastMousePos.y = mousePos.y;\r\n\r\n\t\t\t\tmousePos.x = e.clientX - this.offsetLeft;\r\n\t\t\t\tmousePos.y = e.clientY - this.offsetTop;\r\n\t\t\t},\r\n\t\t\tfalse\r\n\t\t);\r\n\r\n\t\t// touch event on mobile\r\n\t\tcanvas.addEventListener(\r\n\t\t\t'touchmove',\r\n\t\t\tfunction (e) {\r\n\t\t\t\tvar touch = e.touches[0];\r\n\t\t\t\tvar mouseEvent = new MouseEvent('mousemove', {\r\n\t\t\t\t\tclientX: touch.clientX,\r\n\t\t\t\t\tclientY: touch.clientY,\r\n\t\t\t\t});\r\n\t\t\t\tcanvas.dispatchEvent(mouseEvent);\r\n\t\t\t},\r\n\t\t\tfalse\r\n\t\t);\r\n\r\n\t\t// mouse down / touch start\r\n\t\tcanvas.addEventListener(\r\n\t\t\t'mousedown',\r\n\t\t\tfunction (e) {\r\n\t\t\t\tcanvas.addEventListener('mousemove', onPaint, false);\r\n\t\t\t},\r\n\t\t\tfalse\r\n\t\t);\r\n\r\n\t\tcanvas.addEventListener(\r\n\t\t\t'touchstart',\r\n\t\t\tfunction (e) {\r\n\t\t\t\tmousePos = getTouchPos(canvas, e);\r\n\t\t\t\tvar touch = e.touches[0];\r\n\t\t\t\tvar mouseEvent = new MouseEvent('mousedown', {\r\n\t\t\t\t\tclientX: touch.clientX,\r\n\t\t\t\t\tclientY: touch.clientY,\r\n\t\t\t\t});\r\n\t\t\t\tcanvas.dispatchEvent(mouseEvent);\r\n\t\t\t},\r\n\t\t\tfalse\r\n\t\t);\r\n\r\n\t\t// mouse up, touch end\r\n\t\tcanvas.addEventListener(\r\n\t\t\t'mouseup',\r\n\t\t\tfunction () {\r\n\t\t\t\tcanvas.removeEventListener('mousemove', onPaint, false);\r\n\t\t\t},\r\n\t\t\tfalse\r\n\t\t);\r\n\r\n\t\t// Set up touch events for mobile, etc\r\n\t\tcanvas.addEventListener(\r\n\t\t\t'touchend',\r\n\t\t\tfunction (e) {\r\n\t\t\t\tvar mouseEvent = new MouseEvent('mouseup', {});\r\n\t\t\t\tcanvas.dispatchEvent(mouseEvent);\r\n\t\t\t},\r\n\t\t\tfalse\r\n\t\t);\r\n\r\n\t\t// Get the position of a touch relative to the canvas\r\n\t\tfunction getTouchPos(canvasDom, touchEvent) {\r\n\t\t\tvar rect = canvasDom.getBoundingClientRect();\r\n\t\t\treturn {\r\n\t\t\t\tx: touchEvent.touches[0].clientX - rect.left,\r\n\t\t\t\ty: touchEvent.touches[0].clientY - rect.top,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t/* Drawing on Paint App */\r\n\t\tctx.lineWidth = 3;\r\n\t\tctx.lineJoin = 'round';\r\n\t\tctx.lineCap = 'round';\r\n\t\tctx.strokeStyle = 'black';\r\n\r\n\t\tvar onPaint = function () {\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(lastMousePos.x, lastMousePos.y);\r\n\t\t\tctx.lineTo(mousePos.x, mousePos.y);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.stroke();\r\n\t\t};\r\n\r\n\t\tfunction preventScrolling() {\r\n\t\t\t// Prevent scrolling when touching the canvas\r\n\t\t\tdocument.body.addEventListener(\r\n\t\t\t\t'touchstart',\r\n\t\t\t\tfunction (e) {\r\n\t\t\t\t\tif (e.target == canvas) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tfalse\r\n\t\t\t);\r\n\t\t\tdocument.body.addEventListener(\r\n\t\t\t\t'touchend',\r\n\t\t\t\tfunction (e) {\r\n\t\t\t\t\tif (e.target == canvas) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tfalse\r\n\t\t\t);\r\n\t\t\tdocument.body.addEventListener(\r\n\t\t\t\t'touchmove',\r\n\t\t\t\tfunction (e) {\r\n\t\t\t\t\tif (e.target == canvas) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tfalse\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"sketch\" id=\"sketch\">\r\n\t\t\t\t<canvas className=\"board\" id=\"board\"></canvas>;\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport CreateTwoToneIcon from '@material-ui/icons/CreateTwoTone';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChangeHistoryRoundedIcon from '@material-ui/icons/ChangeHistoryRounded';\r\nimport ColorLensRoundedIcon from '@material-ui/icons/ColorLensRounded';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport Crop169Icon from '@material-ui/icons/Crop169';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nclass MainNav extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Navbar bg=\"light\" fixed=\"top\">\r\n\t\t\t\t{/* <IconButton aria-label=\"menu\" color=\"inherit\">\r\n\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t</IconButton> */}\r\n\t\t\t\t<Navbar.Brand href=\"#home\">\r\n\t\t\t\t\t<h2>kla⭔di⭔</h2>\r\n\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t<Navbar.Collapse className=\"justify-content-center\">\r\n\t\t\t\t\t<IconButton aria-label=\"creion\" color=\"inherit\">\r\n\t\t\t\t\t\t<CreateTwoToneIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton aria-label=\"linie\" color=\"inherit\">\r\n\t\t\t\t\t\t<ShowChartIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton aria-label=\"culoare\" color=\"inherit\">\r\n\t\t\t\t\t\t<ColorLensRoundedIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton aria-label=\"triunghi\" color=\"inherit\">\r\n\t\t\t\t\t\t<ChangeHistoryRoundedIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton aria-label=\"cerc\" color=\"inherit\">\r\n\t\t\t\t\t\t<RadioButtonUncheckedIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton aria-label=\"dreptunghi\" color=\"inherit\">\r\n\t\t\t\t\t\t<Crop169Icon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton aria-label=\"delete\" color=\"inherit\">\r\n\t\t\t\t\t\t<AttachFileIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MainNav;\r\n","import React from 'react';\r\nimport Board from '../board/Board';\r\nimport MainNav from '../navbar/Navbar';\r\n\r\nimport './style.css';\r\n\r\nclass Container extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<MainNav></MainNav>\r\n\t\t\t\t<div className=\"board-container\">\r\n\t\t\t\t\t<Board></Board>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Container;\r\n","import './App.css';\nimport Container from './components/container/Container';\n\nfunction App() {\n\treturn <Container></Container>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}