{"version":3,"sources":["components/board/Board.jsx","components/container/Container.jsx","App.js","reportWebVitals.js","index.js"],"names":["Board","props","this","drawOnCanvas","canvas","document","querySelector","ctx","getContext","sketch","sketch_style","getComputedStyle","width","parseInt","getPropertyValue","height","mouse","x","y","last_mouse","addEventListener","e","pageX","offsetLeft","pageY","offsetTop","lineWidth","lineJoin","lineCap","strokeStyle","onPaint","removeEventListener","beginPath","moveTo","lineTo","closePath","stroke","className","id","React","Component","Container","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6SA8EeA,G,wDAzEd,WAAYC,GAAQ,uCACbA,G,gEAINC,KAAKC,iB,qCAIL,IAAIC,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MAExBC,EAASJ,SAASC,cAAc,WAChCI,EAAeC,iBAAiBF,GACpCL,EAAOQ,MAAQC,SAASH,EAAaI,iBAAiB,UACtDV,EAAOW,OAASF,SAASH,EAAaI,iBAAiB,WAEvD,IAAIE,EAAQ,CAAEC,EAAG,EAAGC,EAAG,GACnBC,EAAa,CAAEF,EAAG,EAAGC,EAAG,GAG5Bd,EAAOgB,iBACN,aACA,SAAUC,GACTF,EAAWF,EAAID,EAAMC,EACrBE,EAAWD,EAAIF,EAAME,EAErBF,EAAMC,EAAII,EAAEC,MAAQpB,KAAKqB,WACzBP,EAAME,EAAIG,EAAEG,MAAQtB,KAAKuB,aAE1B,GAIDlB,EAAImB,UAAY,EAChBnB,EAAIoB,SAAW,QACfpB,EAAIqB,QAAU,QACdrB,EAAIsB,YAAc,OAElBzB,EAAOgB,iBACN,aACA,SAAUC,GACTjB,EAAOgB,iBAAiB,YAAaU,GAAS,MAE/C,GAGD1B,EAAOgB,iBACN,WACA,WACChB,EAAO2B,oBAAoB,YAAaD,GAAS,MAElD,GAGD,IAAIA,EAAU,WACbvB,EAAIyB,YACJzB,EAAI0B,OAAOd,EAAWF,EAAGE,EAAWD,GACpCX,EAAI2B,OAAOlB,EAAMC,EAAGD,EAAME,GAC1BX,EAAI4B,YACJ5B,EAAI6B,Y,+BAKL,OACC,sBAAKC,UAAU,SAASC,GAAG,SAA3B,UACC,wBAAQD,UAAU,QAAQC,GAAG,UAD9B,W,GAnEiBC,IAAMC,YCoBXC,G,wDAlBd,WAAYxC,GAAQ,uCACbA,G,qDAIN,OACC,sBAAKoC,UAAU,YAAf,UACC,qBAAKA,UAAU,yBAAf,SACC,uBAAOK,KAAK,YAEb,qBAAKL,UAAU,kBAAf,SACC,cAAC,EAAD,a,GAZmBE,IAAMC,YCEfG,MAJf,WACC,OAAO,cAAC,EAAD,KCQOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlD,SAASmD,eAAe,SAM1BZ,M","file":"static/js/main.ebef73a1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './style.css';\r\n\r\nclass Board extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.drawOnCanvas();\r\n\t}\r\n\r\n\tdrawOnCanvas() {\r\n\t\tvar canvas = document.querySelector('#board');\r\n\t\tvar ctx = canvas.getContext('2d');\r\n\r\n\t\tvar sketch = document.querySelector('#sketch');\r\n\t\tvar sketch_style = getComputedStyle(sketch);\r\n\t\tcanvas.width = parseInt(sketch_style.getPropertyValue('width'));\r\n\t\tcanvas.height = parseInt(sketch_style.getPropertyValue('height'));\r\n\r\n\t\tvar mouse = { x: 0, y: 0 };\r\n\t\tvar last_mouse = { x: 0, y: 0 };\r\n\r\n\t\t/* Mouse Capturing Work */\r\n\t\tcanvas.addEventListener(\r\n\t\t\t'mousemove',\r\n\t\t\tfunction (e) {\r\n\t\t\t\tlast_mouse.x = mouse.x;\r\n\t\t\t\tlast_mouse.y = mouse.y;\r\n\r\n\t\t\t\tmouse.x = e.pageX - this.offsetLeft;\r\n\t\t\t\tmouse.y = e.pageY - this.offsetTop;\r\n\t\t\t},\r\n\t\t\tfalse\r\n\t\t);\r\n\r\n\t\t/* Drawing on Paint App */\r\n\t\tctx.lineWidth = 5;\r\n\t\tctx.lineJoin = 'round';\r\n\t\tctx.lineCap = 'round';\r\n\t\tctx.strokeStyle = 'blue';\r\n\r\n\t\tcanvas.addEventListener(\r\n\t\t\t'mousedown',\r\n\t\t\tfunction (e) {\r\n\t\t\t\tcanvas.addEventListener('mousemove', onPaint, false);\r\n\t\t\t},\r\n\t\t\tfalse\r\n\t\t);\r\n\r\n\t\tcanvas.addEventListener(\r\n\t\t\t'mouseup',\r\n\t\t\tfunction () {\r\n\t\t\t\tcanvas.removeEventListener('mousemove', onPaint, false);\r\n\t\t\t},\r\n\t\t\tfalse\r\n\t\t);\r\n\r\n\t\tvar onPaint = function () {\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(last_mouse.x, last_mouse.y);\r\n\t\t\tctx.lineTo(mouse.x, mouse.y);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.stroke();\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"sketch\" id=\"sketch\">\r\n\t\t\t\t<canvas className=\"board\" id=\"board\"></canvas>;\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport Board from '../board/Board';\r\n\r\nimport './style.css';\r\n\r\nclass Container extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"color-picker-container\">\r\n\t\t\t\t\t<input type=\"color\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"board-container\">\r\n\t\t\t\t\t<Board></Board>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Container;\r\n","import './App.css';\nimport Container from './components/container/Container';\n\nfunction App() {\n\treturn <Container></Container>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}